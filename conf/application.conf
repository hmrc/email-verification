# Copyright 2020 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

appName=email-verification

play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Define any modules used here
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.MicroserviceFilters"


play.http.errorHandler = "uk.gov.hmrc.emailverification.ErrorHandler"


# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
application.langs="en"

# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router=prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and 
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule. 

controllers {
    # 300 is the default, you may need to change this according to your needs
    confidenceLevel = 300

    com.kenshoo.play.metrics.MetricsController = {
      needsAuth = false
      needsLogging = false
      needsAuditing = false
    }

  uk.gov.hmrc.emailverification.controllers.EmailVerificationController = {
      needsAuth = false
      needsLogging = true
      needsAuditing = false
    }

}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=INFO


# Microservice specific config

auditing {
    enabled=false
    traceRequests=true
    consumer {
        baseUri {
            host = localhost
            port = 8100
        }
    }
}


mongodb {
    uri = "mongodb://localhost:27017/email-verification"
}

platform.frontend.host = "http://localhost:9890"

microservice {
    metrics {
        graphite {
            host = graphite
            port = 2003
            prefix = play.${appName}.
            enabled = false
        }
    }

    services {

        auth {
            host=localhost
            port=8500
        }
		
		    # Locally you cannot send emails so for performance and integration tests override this to call the email-verification-stubs
        email {
            host = localhost
            port = 8300
            path = ""
        }

        platform-analytics {
            host = localhost
            port = 9982
        }
    }
}

# the value below is valid for local environment only
token.encryption.key = "gvBoGdgzqG1AarzF1LY0zQ=="
