# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

appName=email-verification

# Define any modules used here
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

play.http.errorHandler = "uk.gov.hmrc.emailverification.ErrorHandlerOverride"

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and 
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule. 

passcodeEmailTemplateParameters {

}

verificationStatusRepositoryTtl = 24 hours

#The maximum passcode attempts we allow per session before we block you with forbidden response
maxPasscodeAttempts = 5
#The maximum emails sent per email address per session before we block you with forbidden response
maxEmailAttempts = 5
#The maximum different email addresses you can try per session before we block you with forbidden response
maxDifferentEmails = 10

passcodeExpiryMinutes = 15
verificationCodeExpiryMinutes = 15 # minutes

verifiedEmailRepo {
    hashKey = somehashkey
    replaceIndex = false # If true rebuilds indexes on startup
    ttlDays = 2555 # 2555 days = 7 years
}

controllers {
    confidenceLevel = 250

  uk.gov.hmrc.emailverification.controllers.EmailVerificationController = {
      needsAuth = false
      needsLogging = true
      needsAuditing = true
    }

    uk.gov.hmrc.emailverification.controllers.EmailVerificationV2Controller = {
      needsAuth = false
      needsLogging = true
      needsAuditing = true
    }

}

mongodb {
    uri = "mongodb://localhost:27017/email-verification"
}

platform.frontend.host = "http://localhost:9890"

microservice {
    metrics.graphite.enabled = true

    services {
        auth {
            host=localhost
            port=8500
        }

      # Used for v2 only
      access-control {
        request.formUrl = "https://forms.office.com/Pages/ResponsePage.aspx?id=PPdSrBr9mkqOekokjzE54cRTj_GCzpRJqsT4amG0JK1UMkpBS1NUVDhWR041NjJWU0lCMVZUNk5NTi4u"
        enabled = "false"
        allow-list = []
      }

      # Locally you cannot send emails so for performance and integration tests override this to call the email-verification-stubs
        email {
            host = localhost
            port = 8300
            path = ""
        }
    }
}

# the value below is valid for local environment only
token.encryption.key = "gvBoGdgzqG1AarzF1LY0zQ=="

# reduce log spam in tests
mongo-async-driver.pekka {
    log-dead-letters = off
    log-dead-letters-during-shutdown = off
}

http-verbs.retries.ssl-engine-closed-already.enabled = true
